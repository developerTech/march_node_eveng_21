https://code.visualstudio.com/download (install)
https://github.com/ (create account)
https://git-scm.com/downloads (install)
https://nodejs.org/en/ (install)

//extension
> chrome (https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh)

> vscode
githistory
gitlens
TabNine
eslint
vscode-icons
spellCheck


NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Redis  > 6379
redisWithMongo
ImageUpload
Node-Es6(.babel)
MongoDb Basic >27017  (local/cloud)
Zomato Api
Api with NodeJS(Rest)>1
Swagger
Testing
DashBoard(Crud)
Github
--Deployment of app---
Heroku
Pm2
Docker
Nginx
Login/Logout(JWT)
Oauth(with github)
TelegramChat
Oauth(with google)
GraphQl API
NodeJs with postgres
FIREBASE
Paytm-Payment
Email With Node(sendgird)(https://app.sendgrid.com/)
Chatapp
--------NOT---------
React/Angular
Html/css/jquery

////////////////////////////////
Node > async single threaded non blocking I/O

engine v8(chrome)

open source
> any body can contribute to development
https://www.npmjs.com/

npm 
> node package manager

JSON
> JavaScript Object Notation

[
{
    "name":"John",
    "class":"UI"
},
{
    "name":"Nikita",
    "class":"React"
}
]

/////package.json//////
meta data > name,version,description
packages
script > start test

/////Step to generate package.json/////
**Node must be installed
> go inside the folder using cmd/terminal
> npm init
> answer all questions
> type "yes"

/////Step to install package /////
**Node must be installed
> go inside the folder using cmd/terminal
> npm i packagename

////
dev dependencies
/////

**Node must be installed
> go inside the folder using cmd/terminal
> npm i packagename --save-dev

// global dependencies
> install in laptop irrespective of any app
> once installed can be used for all the applications
> package that help to run (need before applications start)

// windows
> open cmd as administrator
> npm i -g packagename

//mac/linux
> open terminal
> sudo npm i -g packagename

> npm i -g nodemon

///////////
get > read
post > insert
put > update
delete > remove

npm i chalk@4.6.7

> https://www.mongodb.com/try/download/community

params
> /
> need to define 
> we can pass limited data
> req.params.paramName

queryParams
> ?
> no need to define
> need when have to pass more than one value 
> req.query.queryName 

https://api.openweathermap.org/data/2.5/forecast/daily?q=Amsterdam&mode=json&units=metric&cnt=5&appid=fbf712a5a83d7305c3cda4ca8fe7ef29

/////////////
download Redis > https://github.com/dmajkic/redis/downloads

//////
KEYS *
set keyname value 
get keyname 
del keyname
FLUSHALL


function add(a,b){
    return a+b
}

add

const add = (a,b) => { return a+b }


///////
C > Insert > Post
R > Read > Get
U > Update > Put
D > Delete > Delete

/////
Pm2

npm i -g pm2

pm2 start filename
pm2 status
pm2 stop filename


docker build . -t imagename
docker run -p 8920:9800 imagename

/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}


// https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps


//dummy api
npx json-server --watch db.json --port 8900

{
  Products(id:4){
    product_name,
    category,
    Price
  }
}

mutation{
  addProducts(
    id:51,
    product_name:"Test product1",
  ){
    id
  }
}

https://business.paytm.com/docs/server-sdk/node/